{
    "className": "Fibonacci",
    "testMethods": [
        {
            "methodName": "testFibIterWithZero",
            "code": "@Test\nvoid testFibIterWithZero() {\n assertEquals(0, Fibonacci.fibIter(0));\n}"
        },
        {
            "methodName": "testFibIterWithOne",
            "code": "@Test\nvoid testFibIterWithOne() {\n assertEquals(1, Fibonacci.fibIter(1));\n}"
        },
        {
            "methodName": "testFibIterWithNegativeNumber",
            "code": "@Test\nvoid testFibIterWithNegativeNumber() {\n assertThrows(IllegalArgumentException.class, () -> Fibonacci.fibIter(-1));\n}"
        },
        {
            "methodName": "testFibIterWithLargeNumber",
            "code": "@Test\nvoid testFibIterWithLargeNumber() {\n assertEquals(144, Fibonacci.fibIter(12));\n}"
        }
    ]
}