{
    "className": "Fibonacci",
    "testMethods": [
        {
            "methodName": "testFibIterWithZero",
            "code": "@Test \\nvoid testFibIterWithZero(){\\n assertEquals(0, Fibonacci.fibIter(0));\\n}"
        },
        {
            "methodName": "testFibIterWithOne",
            "code": "@Test \\nvoid testFibIterWithOne(){\\n assertEquals(1, Fibonacci.fibIter(1));\\n}"
        },
        {
            "methodName": "testFibIterWithTwo",
            "code": "@Test \\nvoid testFibIterWithTwo(){\\n assertEquals(1, Fibonacci.fibIter(2));\\n}"
        },
        {
            "methodName": "testFibIterWithThree",
            "code": "@Test \\nvoid testFibIterWithThree(){\\n assertEquals(2, Fibonacci.fibIter(3));\\n}"
        },
        {
            "methodName": "testFibIterWithNegativeValue",
            "code": "@Test \\nvoid testFibIterWithNegativeValue(){\\n assertThrows(IllegalArgumentException.class, () -> Fibonacci.fibIter(-1));\\n}"
        }
    ]
}