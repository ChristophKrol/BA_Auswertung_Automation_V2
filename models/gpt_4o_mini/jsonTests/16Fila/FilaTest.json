"{\"className\":\"FilaTest\",\"testMethods\":[{\"methodName\":\"testFilaInitialization\",\"code\":\"@Test\\npublic void testFilaInitialization() {\\n    Fila fila = new Fila();\\n    assertTrue(fila.vazia());\\n}\"},{\"methodName\":\"testEnfileiraAndVazia\",\"code\":\"@Test\\npublic void testEnfileiraAndVazia() {\\n    Fila fila = new Fila();\\n    fila.enfileira(\\\"item1\\\");\\n    assertFalse(fila.vazia());\\n    fila.enfileira(\\\"item2\\\");\\n    assertFalse(fila.vazia());\\n}\"},{\"methodName\":\"testDesenfileiraSingleItem\",\"code\":\"@Test\\npublic void testDesenfileiraSingleItem() throws Exception {\\n    Fila fila = new Fila();\\n    fila.enfileira(\\\"item1\\\");\\n    Object item = fila.desenfileira();\\n    assertEquals(\\\"item1\\\", item);\\n    assertTrue(fila.vazia());\\n}\"},{\"methodName\":\"testDesenfileiraMultipleItems\",\"code\":\"@Test\\npublic void testDesenfileiraMultipleItems() throws Exception {\\n    Fila fila = new Fila();\\n    fila.enfileira(\\\"item1\\\");\\n    fila.enfileira(\\\"item2\\\");\\n    Object firstItem = fila.desenfileira();\\n    assertEquals(\\\"item1\\\", firstItem);\\n    Object secondItem = fila.desenfileira();\\n    assertEquals(\\\"item2\\\", secondItem);\\n    assertTrue(fila.vazia());\\n}\"},{\"methodName\":\"testDesenfileiraEmptyFilaThrowsException\",\"code\":\"@Test(expected = Exception.class)\\npublic void testDesenfileiraEmptyFilaThrowsException() throws Exception {\\n    Fila fila = new Fila();\\n    fila.desenfileira();\\n}\"},{\"methodName\":\"testImprimeWithItems\",\"code\":\"@Test\\npublic void testImprimeWithItems() {\\n    Fila fila = new Fila();\\n    fila.enfileira(\\\"item1\\\");\\n    fila.enfileira(\\\"item2\\\");\\n    ByteArrayOutputStream outputStream = new ByteArrayOutputStream();\\n    System.setOut(new PrintStream(outputStream));\\n    fila.imprime();\\n    String output = outputStream.toString().trim();\\n    assertEquals(\\\" item1 item2\\\", output);\\n}\"},{\"methodName\":\"testEnfileiraBoundaryValues\",\"code\":\"@Test\\npublic void testEnfileiraBoundaryValues() {\\n    Fila fila = new Fila();\\n    fila.enfileira(\\\"boundary1\\\");\\n    fila.enfileira(\\\"boundary2\\\");\\n    assertFalse(fila.vazia());\\n    assertEquals(\\\"boundary1\\\", fila.desenfileira());\\n    assertEquals(\\\"boundary2\\\", fila.desenfileira());\\n    assertTrue(fila.vazia());\\n}\"}]}"