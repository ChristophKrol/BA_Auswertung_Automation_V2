"{\"className\":\"CasamentoExatoTest\",\"testMethods\":[{\"methodName\":\"testForcaBruta_whenPatternFound_shouldPrintPosition\",\"code\":\"@Test\\npublic void testForcaBruta_whenPatternFound_shouldPrintPosition() {\\n    // Arrange\\n    String T = \\\"ababcabcacbab\\\";\\n    String P = \\\"abc\\\";\\n    int n = T.length();\\n    int m = P.length();\\n    \\n    // Act\\n    CasamentoExato.forcaBruta(T, n, P, m);\\n    \\n    // Assert\\n    // Check the console output for the expected result\\n}\"},{\"methodName\":\"testForcaBruta_whenPatternNotFound_shouldNotPrintPosition\",\"code\":\"@Test\\npublic void testForcaBruta_whenPatternNotFound_shouldNotPrintPosition() {\\n    // Arrange\\n    String T = \\\"abcdefgh\\\";\\n    String P = \\\"xyz\\\";\\n    int n = T.length();\\n    int m = P.length();\\n    \\n    // Act\\n    CasamentoExato.forcaBruta(T, n, P, m);\\n    \\n    // Assert\\n    // Check the console output for the expected result\\n}\"},{\"methodName\":\"testShiftAndExato_whenPatternFound_shouldPrintPosition\",\"code\":\"@Test\\npublic void testShiftAndExato_whenPatternFound_shouldPrintPosition() {\\n    // Arrange\\n    String T = \\\"ababcabcacbab\\\";\\n    String P = \\\"abc\\\";\\n    int n = T.length();\\n    int m = P.length();\\n    \\n    // Act\\n    CasamentoExato.shiftAndExato(T, n, P, m);\\n    \\n    // Assert\\n    // Check the console output for the expected result\\n}\"},{\"methodName\":\"testShiftAndExato_whenPatternNotFound_shouldNotPrintPosition\",\"code\":\"@Test\\npublic void testShiftAndExato_whenPatternNotFound_shouldNotPrintPosition() {\\n    // Arrange\\n    String T = \\\"abcdefgh\\\";\\n    String P = \\\"xyz\\\";\\n    int n = T.length();\\n    int m = P.length();\\n    \\n    // Act\\n    CasamentoExato.shiftAndExato(T, n, P, m);\\n    \\n    // Assert\\n    // Check the console output for the expected result\\n}\"},{\"methodName\":\"testBmh_whenPatternFound_shouldPrintPosition\",\"code\":\"@Test\\npublic void testBmh_whenPatternFound_shouldPrintPosition() {\\n    // Arrange\\n    String T = \\\"ababcabcacbab\\\";\\n    String P = \\\"abc\\\";\\n    int n = T.length();\\n    int m = P.length();\\n    \\n    // Act\\n    CasamentoExato.bmh(T, n, P, m);\\n    \\n    // Assert\\n    // Check the console output for the expected result\\n}\"},{\"methodName\":\"testBmh_whenPatternNotFound_shouldNotPrintPosition\",\"code\":\"@Test\\npublic void testBmh_whenPatternNotFound_shouldNotPrintPosition() {\\n    // Arrange\\n    String T = \\\"abcdefgh\\\";\\n    String P = \\\"xyz\\\";\\n    int n = T.length();\\n    int m = P.length();\\n    \\n    // Act\\n    CasamentoExato.bmh(T, n, P, m);\\n    \\n    // Assert\\n    // Check the console output for the expected result\\n}\"},{\"methodName\":\"testBmhs_whenPatternFound_shouldPrintPosition\",\"code\":\"@Test\\npublic void testBmhs_whenPatternFound_shouldPrintPosition() {\\n    // Arrange\\n    String T = \\\"ababcabcacbab\\\";\\n    String P = \\\"abc\\\";\\n    int n = T.length();\\n    int m = P.length();\\n    \\n    // Act\\n    CasamentoExato.bmhs(T, n, P, m);\\n    \\n    // Assert\\n    // Check the console output for the expected result\\n}\"},{\"methodName\":\"testBmhs_whenPatternNotFound_shouldNotPrintPosition\",\"code\":\"@Test\\npublic void testBmhs_whenPatternNotFound_shouldNotPrintPosition() {\\n    // Arrange\\n    String T = \\\"abcdefgh\\\";\\n    String P = \\\"xyz\\\";\\n    int n = T.length();\\n    int m = P.length();\\n    \\n    // Act\\n    CasamentoExato.bmhs(T, n, P, m);\\n    \\n    // Assert\\n    // Check the console output for the expected result\\n}\"}]}"