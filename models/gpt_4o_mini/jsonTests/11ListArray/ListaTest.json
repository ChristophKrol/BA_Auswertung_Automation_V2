"{\"className\":\"ListaTest\",\"testMethods\":[{\"methodName\":\"testInsere_ValidElement_ShouldInsertElementSuccessfully\",\"code\":\"@Test\\npublic void testInsere_ValidElement_ShouldInsertElementSuccessfully() throws Exception {\\n    Lista lista = new Lista();\\n    Object element = new Object();\\n    lista.insere(element);\\n    assertFalse(lista.vazia());\\n    assertEquals(element, lista.item[0]);\\n}\"},{\"methodName\":\"testInsere_ExceptionWhenListIsFull\",\"code\":\"@Test\\npublic void testInsere_ExceptionWhenListIsFull() {\\n    Lista lista = new Lista();\\n    try {\\n        for (int i = 0; i < 1001; i++) {\\n            lista.insere(new Object());\\n        }\\n        fail(\\\"Expected Exception not thrown\\\");\\n    } catch (Exception e) {\\n        assertEquals(\\\"Erro: A lista esta cheia\\\", e.getMessage());\\n    }\\n}\"},{\"methodName\":\"testVazia_WhenListIsEmpty_ShouldReturnTrue\",\"code\":\"@Test\\npublic void testVazia_WhenListIsEmpty_ShouldReturnTrue() {\\n    Lista lista = new Lista();\\n    assertTrue(lista.vazia());\\n}\"},{\"methodName\":\"testVazia_WhenListIsNotEmpty_ShouldReturnFalse\",\"code\":\"@Test\\npublic void testVazia_WhenListIsNotEmpty_ShouldReturnFalse() throws Exception {\\n    Lista lista = new Lista();\\n    lista.insere(new Object());\\n    assertFalse(lista.vazia());\\n}\"},{\"methodName\":\"testImprime_ShouldPrintElementsWithoutError\",\"code\":\"@Test\\npublic void testImprime_ShouldPrintElementsWithoutError() throws Exception {\\n    Lista lista = new Lista();\\n    lista.insere(\\\"Element 1\\\");\\n    lista.insere(\\\"Element 2\\\");\\n    lista.insere(\\\"Element 3\\\");\\n    // Here we can redirect stdout or use another mechanism to verify the output in tests.\\n    lista.imprime();\\n}\"},{\"methodName\":\"testInsere_BoundaryValue_ExactLimitShouldInsertSuccessfully\",\"code\":\"@Test\\npublic void testInsere_BoundaryValue_ExactLimitShouldInsertSuccessfully() throws Exception {\\n    Lista lista = new Lista();\\n    for (int i = 0; i < 1000; i++) {\\n        lista.insere(new Object());\\n    }\\n    assertFalse(lista.vazia());\\n    assertEquals(1000, lista.ultimo);\\n}\"},{\"methodName\":\"testImprime_EmptyList_ShouldNotThrowException\",\"code\":\"@Test\\npublic void testImprime_EmptyList_ShouldNotThrowException() {\\n    Lista lista = new Lista();\\n    lista.imprime(); // Ensure this does not throw an exception\\n}\"}]}"