"{\"className\":\"MaxMin1Test\",\"testMethods\":[{\"methodName\":\"testMaxMin1_ValidInputs\",\"code\":\"@Test\\npublic void testMaxMin1_ValidInputs() {\\n    int[] values = {1, 2, 3, 4, 5};\\n    int n = values.length;\\n    int[] result = MaxMin1.maxMin1(values, n);\\n    assertEquals(5, result[0]); // max\\n    assertEquals(1, result[1]); // min\\n}\"},{\"methodName\":\"testMaxMin1_SingleElement\",\"code\":\"@Test\\npublic void testMaxMin1_SingleElement() {\\n    int[] values = {10};\\n    int n = values.length;\\n    int[] result = MaxMin1.maxMin1(values, n);\\n    assertEquals(10, result[0]); // max\\n    assertEquals(10, result[1]); // min\\n}\"},{\"methodName\":\"testMaxMin1_NegativeValues\",\"code\":\"@Test\\npublic void testMaxMin1_NegativeValues() {\\n    int[] values = {-10, -20, -30, -40};\\n    int n = values.length;\\n    int[] result = MaxMin1.maxMin1(values, n);\\n    assertEquals(-10, result[0]); // max\\n    assertEquals(-40, result[1]); // min\\n}\"},{\"methodName\":\"testMaxMin1_MixedValues\",\"code\":\"@Test\\npublic void testMaxMin1_MixedValues() {\\n    int[] values = {-1, 0, 1, -2, 2};\\n    int n = values.length;\\n    int[] result = MaxMin1.maxMin1(values, n);\\n    assertEquals(2, result[0]); // max\\n    assertEquals(-2, result[1]); // min\\n}\"},{\"methodName\":\"testMaxMin1_ZeroElements\",\"code\":\"@Test\\npublic void testMaxMin1_ZeroElements() throws Exception {\\n    int[] values = {};\\n    int n = 0;\\n    try {\\n        MaxMin1.maxMin1(values, n);\\n    } catch (ArrayIndexOutOfBoundsException e) {\\n        // Expected; test should pass\\n    }\\n}\"},{\"methodName\":\"testMaxMin1_BoundaryValues\",\"code\":\"@Test\\npublic void testMaxMin1_BoundaryValues() {\\n    int[] values = {Integer.MIN_VALUE, Integer.MAX_VALUE};\\n    int n = values.length;\\n    int[] result = MaxMin1.maxMin1(values, n);\\n    assertEquals(Integer.MAX_VALUE, result[0]); // max\\n    assertEquals(Integer.MIN_VALUE, result[1]); // min\\n}\"}]}"