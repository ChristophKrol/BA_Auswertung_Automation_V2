"{\"className\":\"FPHeapMaxTest\",\"testMethods\":[{\"methodName\":\"testConstructor\",\"code\":\"@Test\\npublic void testConstructor() {\\n    FPHeapMax heap = new FPHeapMax(10);\\n    assertNotNull(heap);\\n    assertNotNull(heap.v);\\n    assertEquals(0, heap.n);\\n}\"},{\"methodName\":\"testInsertAndMax\",\"code\":\"@Test\\npublic void testInsertAndMax() throws Exception {\\n    FPHeapMax heap = new FPHeapMax(10);\\n    MeuItem item1 = new MeuItem(10);\\n    MeuItem item2 = new MeuItem(20);\\n    MeuItem item3 = new MeuItem(15);\\n\\n    heap.insere(item1);\\n    assertEquals(1, heap.n);\\n    assertEquals(10, ((MeuItem)heap.max()).compara(item1));\\n\\n    heap.insere(item2);\\n    assertEquals(2, heap.n);\\n    assertEquals(20, ((MeuItem)heap.max()).compara(item2));\\n\\n    heap.insere(item3);\\n    assertEquals(3, heap.n);\\n    assertEquals(20, ((MeuItem)heap.max()).compara(item2));\\n}\"},{\"methodName\":\"testRemoveMax\",\"code\":\"@Test\\npublic void testRemoveMax() throws Exception {\\n    FPHeapMax heap = new FPHeapMax(10);\\n    MeuItem item1 = new MeuItem(10);\\n    MeuItem item2 = new MeuItem(20);\\n    MeuItem item3 = new MeuItem(15);\\n\\n    heap.insere(item1);\\n    heap.insere(item2);\\n    heap.insere(item3);\\n\\n    MeuItem maxItem = (MeuItem) heap.retiraMax();\\n    assertEquals(20, maxItem.compara(item2));\\n    assertEquals(2, heap.n);\\n    maxItem = (MeuItem) heap.retiraMax();\\n    assertEquals(15, maxItem.compara(item3));\\n    assertEquals(1, heap.n);\\n    maxItem = (MeuItem) heap.retiraMax();\\n    assertEquals(10, maxItem.compara(item1));\\n    assertEquals(0, heap.n);\\n}\"},{\"methodName\":\"testRetiraMaxWhenEmpty\",\"code\":\"@Test\\npublic void testRetiraMaxWhenEmpty() {\\n    FPHeapMax heap = new FPHeapMax(10);\\n    Exception exception = assertThrows(Exception.class, () -> {\\n        heap.retiraMax();\\n    });\\n    assertEquals(\\\"Erro: heap vazio\\\", exception.getMessage());\\n}\"},{\"methodName\":\"testAumentaChaveValidations\",\"code\":\"@Test\\npublic void testAumentaChaveValidations() throws Exception {\\n    FPHeapMax heap = new FPHeapMax(10);\\n    MeuItem item1 = new MeuItem(10);\\n    heap.insere(item1);\\n    Exception exception = assertThrows(Exception.class, () -> {\\n        heap.aumentaChave(1, null);\\n    });\\n    assertEquals(\\\"Erro: chaveNova com valor null\\\", exception.getMessage());\\n}\"},{\"methodName\":\"testBoundaryInsertFullHeap\",\"code\":\"@Test\\npublic void testBoundaryInsertFullHeap() throws Exception {\\n    FPHeapMax heap = new FPHeapMax(1);\\n    MeuItem item1 = new MeuItem(10);\\n    MeuItem item2 = new MeuItem(20);\\n    heap.insere(item1);\\n    Exception exception = assertThrows(Exception.class, () -> {\\n        heap.insere(item2);\\n    });\\n    assertEquals(\\\"Erro: heap cheio\\\", exception.getMessage());\\n}\"},{\"methodName\":\"testRefazBoundaryValues\",\"code\":\"@Test\\npublic void testRefazBoundaryValues() throws Exception {\\n    FPHeapMax heap = new FPHeapMax(10);\\n    MeuItem item1 = new MeuItem(10);\\n    MeuItem item2 = new MeuItem(20);\\n\\n    heap.insere(item1);\\n    heap.insere(item2);\\n\\n    // Using the reference to access elements directly for boundary testing.\\n    heap.refaz(1, 2);\\n    // Edge case: no other changes should disrupt the structure if refaz works properly.\\n    assertEquals(20, ((MeuItem)heap.max()).compara(item2));\\n}\"},{\"methodName\":\"testImprime\",\"code\":\"@Test\\npublic void testImprime() throws Exception {\\n    FPHeapMax heap = new FPHeapMax(10);\\n    MeuItem item1 = new MeuItem(10);\\n    MeuItem item2 = new MeuItem(20);\\n    heap.insere(item1);\\n    heap.insere(item2);\\n    // Testing print might not return a value so we check the max value after print.\\n    heap.imprime();\\n    assertEquals(20, ((MeuItem)heap.max()).compara(item2));\\n}\"}]}"