"{\"className\":\"FibonacciTest\",\"testMethods\":[{\"methodName\":\"testFibIter_PositiveValue\",\"code\":\"@Test\\npublic void testFibIter_PositiveValue() {\\n    int result = Fibonacci.fibIter(5);\\n    assertEquals(5, result);\\n}\"},{\"methodName\":\"testFibIter_ZeroValue\",\"code\":\"@Test\\npublic void testFibIter_ZeroValue() {\\n    int result = Fibonacci.fibIter(0);\\n    assertEquals(0, result);\\n}\"},{\"methodName\":\"testFibIter_NegativeValue\",\"code\":\"@Test\\npublic void testFibIter_NegativeValue() {\\n    assertThrows(IllegalArgumentException.class, () -> {\\n        Fibonacci.fibIter(-1);\\n    });\\n}\"},{\"methodName\":\"testFibIter_BoundaryValue_One\",\"code\":\"@Test\\npublic void testFibIter_BoundaryValue_One() {\\n    int result = Fibonacci.fibIter(1);\\n    assertEquals(1, result);\\n}\"},{\"methodName\":\"testFibIter_BoundaryValue_Two\",\"code\":\"@Test\\npublic void testFibIter_BoundaryValue_Two() {\\n    int result = Fibonacci.fibIter(2);\\n    assertEquals(1, result);\\n}\"},{\"methodName\":\"testFibIter_LargeValue\",\"code\":\"@Test\\npublic void testFibIter_LargeValue() {\\n    int result = Fibonacci.fibIter(30);\\n    assertEquals(832040, result);\\n}\"}]}"