"{\"className\":\"MaxTest\",\"testMethods\":[{\"methodName\":\"testMaxWithSingleElement\",\"code\":\"@Test\\npublic void testMaxWithSingleElement() {\\n    Item[] items = new Item[1];\\n    items[0] = new MeuItem(10);\\n    Item result = Max.max(items, 1);\\n    assertEquals(10, ((MeuItem) result).chave);\\n}\"},{\"methodName\":\"testMaxWithMultipleElements\",\"code\":\"@Test\\npublic void testMaxWithMultipleElements() {\\n    Item[] items = new Item[3];\\n    items[0] = new MeuItem(5);\\n    items[1] = new MeuItem(10);\\n    items[2] = new MeuItem(3);\\n    Item result = Max.max(items, 3);\\n    assertEquals(10, ((MeuItem) result).chave);\\n}\"},{\"methodName\":\"testMaxWithNegativeValues\",\"code\":\"@Test\\npublic void testMaxWithNegativeValues() {\\n    Item[] items = new Item[3];\\n    items[0] = new MeuItem(-1);\\n    items[1] = new MeuItem(-10);\\n    items[2] = new MeuItem(-5);\\n    Item result = Max.max(items, 3);\\n    assertEquals(-1, ((MeuItem) result).chave);\\n}\"},{\"methodName\":\"testMaxWithBoundaryValues\",\"code\":\"@Test\\npublic void testMaxWithBoundaryValues() {\\n    Item[] items = new Item[4];\\n    items[0] = new MeuItem(Integer.MIN_VALUE);\\n    items[1] = new MeuItem(0);\\n    items[2] = new MeuItem(Integer.MAX_VALUE);\\n    items[3] = new MeuItem(-1);\\n    Item result = Max.max(items, 4);\\n    assertEquals(Integer.MAX_VALUE, ((MeuItem) result).chave);\\n}\"},{\"methodName\":\"testMaxWithEqualValues\",\"code\":\"@Test\\npublic void testMaxWithEqualValues() {\\n    Item[] items = new Item[3];\\n    items[0] = new MeuItem(1);\\n    items[1] = new MeuItem(1);\\n    items[2] = new MeuItem(1);\\n    Item result = Max.max(items, 3);\\n    assertEquals(1, ((MeuItem) result).chave);\\n}\"},{\"methodName\":\"testMaxWithMixedPositiveAndNegativeValues\",\"code\":\"@Test\\npublic void testMaxWithMixedPositiveAndNegativeValues() { \\n    Item[] items = new Item[5];\\n    items[0] = new MeuItem(-100);\\n    items[1] = new MeuItem(55);\\n    items[2] = new MeuItem(0);\\n    items[3] = new MeuItem(-1);\\n    items[4] = new MeuItem(100);\\n    Item result = Max.max(items, 5);\\n    assertEquals(100, ((MeuItem) result).chave);\\n}\"},{\"methodName\":\"testMaxWithNullItems\",\"code\":\"@Test\\npublic void testMaxWithNullItems() throws NullPointerException {\\n    Item[] items = new Item[3];\\n    items[0] = null;\\n    items[1] = null;\\n    items[2] = new MeuItem(10);\\n    Item result = Max.max(items, 3);\\n    assertEquals(10, ((MeuItem) result).chave);\\n}\"}]}"