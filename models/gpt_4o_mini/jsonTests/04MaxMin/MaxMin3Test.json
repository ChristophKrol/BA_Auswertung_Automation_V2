"{\"className\":\"MaxMin3Test\",\"testMethods\":[{\"methodName\":\"testMaxMin3WithEvenLengthArray\",\"code\":\"@Test\\npublic void testMaxMin3WithEvenLengthArray() throws Exception {\\n    int[] input = {5, 1, 3, 2};\\n    int[] result = MaxMin3.maxMin3(input, input.length);\\n    assertArrayEquals(new int[]{5, 1}, result);\\n}\"},{\"methodName\":\"testMaxMin3WithOddLengthArray\",\"code\":\"@Test\\npublic void testMaxMin3WithOddLengthArray() throws Exception {\\n    int[] input = {10, 3, 5};\\n    int[] result = MaxMin3.maxMin3(input, input.length);\\n    assertArrayEquals(new int[]{10, 3}, result);\\n}\"},{\"methodName\":\"testMaxMin3WithSingleElementArray\",\"code\":\"@Test\\npublic void testMaxMin3WithSingleElementArray() throws Exception {\\n    int[] input = {7};\\n    int[] result = MaxMin3.maxMin3(input, input.length);\\n    assertArrayEquals(new int[]{7, 7}, result);\\n}\"},{\"methodName\":\"testMaxMin3WithNegativeNumbers\",\"code\":\"@Test\\npublic void testMaxMin3WithNegativeNumbers() throws Exception {\\n    int[] input = {-1, -3, -2, -4};\\n    int[] result = MaxMin3.maxMin3(input, input.length);\\n    assertArrayEquals(new int[]{-1, -4}, result);\\n}\"},{\"methodName\":\"testMaxMin3WithBoundaryValues\",\"code\":\"@Test\\npublic void testMaxMin3WithBoundaryValues() throws Exception {\\n    int[] input = {Integer.MAX_VALUE, Integer.MIN_VALUE};\\n    int[] result = MaxMin3.maxMin3(input, input.length);\\n    assertArrayEquals(new int[]{Integer.MAX_VALUE, Integer.MIN_VALUE}, result);\\n}\"},{\"methodName\":\"testMaxMin3WithIdenticalElements\",\"code\":\"@Test\\npublic void testMaxMin3WithIdenticalElements() throws Exception {\\n    int[] input = {2, 2, 2, 2};\\n    int[] result = MaxMin3.maxMin3(input, input.length);\\n    assertArrayEquals(new int[]{2, 2}, result);\\n}\"},{\"methodName\":\"testMaxMin3WithMixedNegativeAndPositive\",\"code\":\"@Test\\npublic void testMaxMin3WithMixedNegativeAndPositive() throws Exception {\\n    int[] input = {-5, 10, 0, -1, 1};\\n    int[] result = MaxMin3.maxMin3(input, input.length);\\n    assertArrayEquals(new int[]{10, -5}, result);\\n}\"},{\"methodName\":\"testMaxMin3WithLargeArray\",\"code\":\"@Test\\npublic void testMaxMin3WithLargeArray() throws Exception {\\n    int[] input = {1000, 2000, 500, 700, 3000, 100};\\n    int[] result = MaxMin3.maxMin3(input, input.length);\\n    assertArrayEquals(new int[]{3000, 100}, result);\\n}\"},{\"methodName\":\"testMaxMin3WithEmptyArray\",\"code\":\"@Test\\npublic void testMaxMin3WithEmptyArray() throws Exception {\\n    int[] input = {};\\n    Exception exception = assertThrows(ArrayIndexOutOfBoundsException.class, () -> {\\n        MaxMin3.maxMin3(input, input.length);\\n    });\\n    assertNotNull(exception);\\n}\"},{\"methodName\":\"testMaxMin3WithSinglePairArray\",\"code\":\"@Test\\npublic void testMaxMin3WithSinglePairArray() throws Exception {\\n    int[] input = {3, 1};\\n    int[] result = MaxMin3.maxMin3(input, input.length);\\n    assertArrayEquals(new int[]{3, 1}, result);\\n}\"}]}"