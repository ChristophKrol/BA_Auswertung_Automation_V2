"{\"className\":\"GrafoTest\",\"testMethods\":[{\"methodName\":\"testGrafoInitializationPositiveBoundary\",\"code\":\"@Test\\npublic void testGrafoInitializationPositiveBoundary() throws Exception {\\n    Grafo grafo = new Grafo(1);\\n    assertEquals(1, grafo.numVertices());\\n}\"},{\"methodName\":\"testGrafoInitializationNegativeBoundary\",\"code\":\"@Test\\npublic void testGrafoInitializationNegativeBoundary() throws Exception {\\n    Grafo grafo = new Grafo(0);\\n    assertEquals(0, grafo.numVertices());\\n}\"},{\"methodName\":\"testInsereArestaNormal\",\"code\":\"@Test\\npublic void testInsereArestaNormal() throws Exception {\\n    Grafo grafo = new Grafo(5);\\n    grafo.insereAresta(0, 1, 10);\\n    assertTrue(grafo.existeAresta(0, 1));\\n}\"},{\"methodName\":\"testInsereArestaNoSpace\",\"code\":\"@Test\\npublic void testInsereArestaNoSpace() throws Exception {\\n    Grafo grafo = new Grafo(1);\\n    grafo.insereAresta(0, 0, 100);\\n    // Test inserting another edge exceeding capacity\\n    grafo.insereAresta(0, 1, 100);\\n    // Check that the edge was not added\\n    assertFalse(grafo.existeAresta(0, 1));\\n}\"},{\"methodName\":\"testListaAdjVaziaTrue\",\"code\":\"@Test\\npublic void testListaAdjVaziaTrue() throws Exception {\\n    Grafo grafo = new Grafo(3);\\n    assertTrue(grafo.listaAdjVazia(0));\\n}\"},{\"methodName\":\"testListaAdjVaziaFalse\",\"code\":\"@Test\\npublic void testListaAdjVaziaFalse() throws Exception {\\n    Grafo grafo = new Grafo(3);\\n    grafo.insereAresta(0, 1, 1);\\n    assertFalse(grafo.listaAdjVazia(0));\\n}\"},{\"methodName\":\"testRetiraArestaExistente\",\"code\":\"@Test\\npublic void testRetiraArestaExistente() throws Exception {\\n    Grafo grafo = new Grafo(3);\\n    grafo.insereAresta(0, 1, 5);\\n    Aresta aresta = grafo.retiraAresta(0, 1);\\n    assertNotNull(aresta);\\n    assertEquals(5, aresta.peso());\\n    assertFalse(grafo.existeAresta(0, 1));\\n}\"},{\"methodName\":\"testRetiraArestaInexistente\",\"code\":\"@Test\\npublic void testRetiraArestaInexistente() throws Exception {\\n    Grafo grafo = new Grafo(3);\\n    grafo.insereAresta(0, 1, 5);\\n    Aresta aresta = grafo.retiraAresta(0, 2);\\n    assertNull(aresta);\\n}\"},{\"methodName\":\"testGrafoTranspostoNoEdges\",\"code\":\"@Test\\npublic void testGrafoTranspostoNoEdges() throws Exception {\\n    Grafo grafo = new Grafo(3);\\n    Grafo transposto = grafo.grafoTransposto();\\n    assertEquals(grafo.numVertices(), transposto.numVertices());\\n}\"},{\"methodName\":\"testGrafoTranspostoWithEdges\",\"code\":\"@Test\\npublic void testGrafoTranspostoWithEdges() throws Exception {\\n    Grafo grafo = new Grafo(3);\\n    grafo.insereAresta(0, 1, 5);\\n    Grafo transposto = grafo.grafoTransposto();\\n    assertTrue(transposto.existeAresta(1, 0));\\n}\"}]}"