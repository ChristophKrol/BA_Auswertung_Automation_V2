"{\"className\":\"MaxMin2Test\",\"testMethods\":[{\"methodName\":\"testMaxMin2_ValidArray\",\"code\":\"@Test\\npublic void testMaxMin2_ValidArray() {\\n    int[] values = {4, 2, 8, 5, 1};\\n    int[] result = MaxMin2.maxMin2(values, values.length);\\n    assertArrayEquals(new int[]{8, 1}, result);\\n}\"},{\"methodName\":\"testMaxMin2_SingleElementArray\",\"code\":\"@Test\\npublic void testMaxMin2_SingleElementArray() {\\n    int[] values = {5};\\n    int[] result = MaxMin2.maxMin2(values, values.length);\\n    assertArrayEquals(new int[]{5, 5}, result);\\n}\"},{\"methodName\":\"testMaxMin2_NegativeValues\",\"code\":\"@Test\\npublic void testMaxMin2_NegativeValues() {\\n    int[] values = {-3, -1, -4, -2};\\n    int[] result = MaxMin2.maxMin2(values, values.length);\\n    assertArrayEquals(new int[]{-1, -4}, result);\\n}\"},{\"methodName\":\"testMaxMin2_MixedValues\",\"code\":\"@Test\\npublic void testMaxMin2_MixedValues() {\\n    int[] values = {-2, 0, 1, -1, 3};\\n    int[] result = MaxMin2.maxMin2(values, values.length);\\n    assertArrayEquals(new int[]{3, -2}, result);\\n}\"},{\"methodName\":\"testMaxMin2_IdenticalValues\",\"code\":\"@Test\\npublic void testMaxMin2_IdenticalValues() {\\n    int[] values = {2, 2, 2, 2};\\n    int[] result = MaxMin2.maxMin2(values, values.length);\\n    assertArrayEquals(new int[]{2, 2}, result);\\n}\"},{\"methodName\":\"testMaxMin2_EdgeCaseEmptyArray\",\"code\":\"@Test\\npublic void testMaxMin2_EdgeCaseEmptyArray() {\\n    int[] values = {};\\n    Exception exception = assertThrows(ArrayIndexOutOfBoundsException.class, () -> {\\n        MaxMin2.maxMin2(values, 0);\\n    });\\n}\"},{\"methodName\":\"testMaxMin2_TwoElementArray\",\"code\":\"@Test\\npublic void testMaxMin2_TwoElementArray() {\\n    int[] values = {9, 4};\\n    int[] result = MaxMin2.maxMin2(values, values.length);\\n    assertArrayEquals(new int[]{9, 4}, result);\\n}\"},{\"methodName\":\"testMaxMin2_BoundaryValues\",\"code\":\"@Test\\npublic void testMaxMin2_BoundaryValues() {\\n    int[] values = {Integer.MAX_VALUE, Integer.MIN_VALUE};\\n    int[] result = MaxMin2.maxMin2(values, values.length);\\n    assertArrayEquals(new int[]{Integer.MAX_VALUE, Integer.MIN_VALUE}, result);\\n}\"}]}"