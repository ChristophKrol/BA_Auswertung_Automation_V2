{
    "className": "MaxMin3",
    "testMethods": [
        {
            "methodName": "testMaxMinWithEmptyArray",
            "code": "@Test \nvoid testMaxMinWithEmptyArray(){\n    assertThrows(IndexOutOfBoundsException.class, () -> MaxMin3.maxMin3(new int[0], 1));\n}\n"
        },
        {
            "methodName": "testMaxMinWithOneElementArray",
            "code": "@Test \nvoid testMaxMinWithOneElementArray(){\n    int[] result = MaxMin3.maxMin3(new int[]{5}, 1);\n    assertEquals(5, result[0]);\n    assertEquals(5, result[1]);\n}\n"
        },
        {
            "methodName": "testMaxMinWithTwoElementsArray",
            "code": "@Test \nvoid testMaxMinWithTwoElementsArray(){\n    int[] result = MaxMin3.maxMin3(new int[]{5, 10}, 2);\n    assertEquals(10, result[0]);\n    assertEquals(5, result[1]);\n}\n"
        },
        {
            "methodName": "testMaxMinWithThreeElementsArray",
            "code": "@Test \nvoid testMaxMinWithThreeElementsArray(){\n    int[] result = MaxMin3.maxMin3(new int[]{5, 10, 15}, 3);\n    assertEquals(15, result[0]);\n    assertEquals(5, result[1]);\n}\n"
        },
        {
            "methodName": "testMaxMinWithOddLengthArray",
            "code": "@Test \nvoid testMaxMinWithOddLengthArray(){\n    int[] result = MaxMin3.maxMin3(new int[]{5, 10, 15, 20}, 4);\n    assertEquals(20, result[0]);\n    assertEquals(5, result[1]);\n}\n"
        },
        {
            "methodName": "testMaxMinWithNegativeValues",
            "code": "@Test \nvoid testMaxMinWithNegativeValues(){\n    int[] result = MaxMin3.maxMin3(new int[]{-10, -20}, 2);\n    assertEquals(-10, result[0]);\n    assertEquals(-20, result[1]);\n}\n"
        },
        {
            "methodName": "testMaxMinWithPositiveAndNegativeValues",
            "code": "@Test \nvoid testMaxMinWithPositiveAndNegativeValues(){\n    int[] result = MaxMin3.maxMin3(new int[]{5, -10}, 2);\n    assertEquals(5, result[0]);\n    assertEquals(-10, result[1]);\n}\n"
        }
    ]
}